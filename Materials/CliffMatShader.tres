[gd_resource type="ShaderMaterial" load_steps=2 format=3 uid="uid://d0mfyn1g86r04"]

[sub_resource type="Shader" id="Shader_7s05p"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.0.alpha15's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 gradient_start : source_color;
uniform vec4 gradient_end : source_color;


uniform float desaturation_scaling = 10.0;


vec3 rgb2hsv(vec3 c)
{
    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));
    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));

    float d = q.x - min(q.w, q.y);
    float e = 1.0e-10;
    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
}

vec3 hsv2rgb(vec3 c)
{
    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
}

varying vec3 hsv;
varying vec3 pos;

void vertex() {
	hsv = rgb2hsv(gradient_start.rgb);
	pos = VERTEX;
}

void fragment() {
	vec3 hue_change = hsv;
//	hue_change.x = gradient_base + pos.y * gra;
	vec3 rgb = hsv2rgb(hue_change);
	ALBEDO = rgb;
}
"

[resource]
render_priority = 0
shader = SubResource("Shader_7s05p")
desaturation_scaling = null
gradient_end = null
gradient_start = Vector3(0.181382, 0.429971, 0.28125)
